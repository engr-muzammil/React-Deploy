{"version":3,"sources":["Login.js","Reg.js","Dashboard.js","Student/Addstudent.js","Student/Table.js","Student/Studentlist.js","Student/Editstudent.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","Email","Password","bind","login","event","this","setState","target","value","fetch","method","headers","body","JSON","stringify","then","Response","json","result","console","log","Status","alert","props","history","push","className","Container","Row","Col","md","lg","xl","CardGroup","Card","CardBody","Form","InputGroup","Input","type","onChange","placeholder","Button","onClick","color","block","Component","Reg","EmployeeName","City","Department","register","Result","Dashboard","Addstudent","axios","post","Name","RollNo","Class","Address","data","handleChange","e","name","FormGroup","row","Label","for","sm","React","Table","DeleteStudent","delete","obj","Id","to","Studentlist","business","get","response","catch","error","map","object","i","key","align","style","marginTop","colSpan","tabRow","Edit","onChangeName","onChangeRollNo","onChangeClass","onChangeAddress","onSubmit","match","params","id","preventDefault","res","App","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","path","component","EditStudent","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4434c769.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport './App.css';\r\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup,\r\n    //  InputGroupAddon, InputGroupText, \r\n     Row } from 'reactstrap';\r\n\r\nclass Login extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            Email:'',\r\n            Password:''\r\n        }\r\n        this.Password = this.Password.bind(this);\r\n        this.Email = this.Email.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n    Email(event){\r\n        this.setState({Email: event.target.value })\r\n    }\r\n    Password(event){\r\n        this.setState({Password: event.target.value })\r\n    }\r\n    login(event){\r\n        debugger;\r\n        fetch('http://localhost:65164/Api/login/Login',{\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Email: this.state.Email,\r\n                Password: this.state.Password\r\n            })\r\n        }).then((Response)=> Response.json()).then((result)=>{\r\n            console.log(result);\r\n            if (result.Status === 'Invalid')\r\n                    alert('Invalid User');\r\n                else\r\n                    this.props.history.push(\"/Dashboard\");\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"app flex-row align-items-center\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <CardGroup>\r\n                                <Card className=\"p-2\">\r\n                                    <CardBody>\r\n                                        <Form>\r\n                                            <div className=\"row mb-2 pageheading\">\r\n                                                <div className=\"col-sm-12 btn disable\">Login</div>\r\n                                            </div>\r\n                                            <InputGroup className=\"mb-3\">\r\n                                                <Input type=\"text\" onChange={this.Email} placeholder=\"Enter Email\" />\r\n                                            </InputGroup>\r\n                                            <InputGroup className=\"mb-4\">\r\n                                                <Input type=\"password\" onChange={this.Password} placeholder=\"Enter Password\" />\r\n                                            </InputGroup>\r\n                                            <Button onClick={this.login} color=\"success\" block>Login</Button>\r\n                                        </Form>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </CardGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Button, Card, CardBody, Col, Container, Form, Input, InputGroup, Row } from 'reactstrap';\r\n\r\nclass Reg extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            EmployeeName: '',\r\n            City: '',\r\n            Email: '',\r\n            Password: '',\r\n            Department: ''\r\n        }\r\n        this.Email = this.Email.bind(this);\r\n        this.Password = this.Password.bind(this);\r\n        this.EmployeeName = this.EmployeeName.bind(this);\r\n        this.Department = this.Department.bind(this);\r\n        this.City = this.City.bind(this);\r\n        this.register = this.register.bind(this);\r\n    }\r\n\r\n    Email(event) {\r\n    this.setState({ Email: event.target.value })\r\n    }\r\n    Department(event) {\r\n    this.setState({ Department: event.target.value })\r\n    }\r\n    Password(event) {\r\n    this.setState({ Password: event.target.value })\r\n    }\r\n    City(event) {\r\n    this.setState({ City: event.target.value })\r\n    }\r\n    EmployeeName(event) {\r\n    this.setState({ EmployeeName: event.target.value })\r\n    }\r\n    register(event){\r\n        fetch('http://localhost:65164/Api/login/InsertEmployee', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                EmployeeName: this.state.EmployeeName,\r\n                Password: this.state.Password,\r\n                Email: this.state.Email,\r\n                City: this.state.City,\r\n                Department: this.state.Department\r\n            })\r\n        }).then((Response) => Response.json()).then((Result) => {\r\n            if (Result.Status === 'Success')\r\n                this.props.history.push(\"/Dashboard\");\r\n            else\r\n            alert('Sorrrrrry !!!! Un-authenticated User !!!!!')\r\n        })\r\n    }\r\n    render() {\r\n            return (\r\n              <div className=\"app flex-row align-items-center\">\r\n                <Container>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <Card className=\"mx-4\">\r\n                        <CardBody className=\"p-4\">\r\n                          <Form>\r\n                            <div className=\"row mb-2 pageheading\">\r\n                              <div className=\"col-sm-12 btn btn-primary\">\r\n                                Sign Up\r\n                                </div>\r\n                            </div>\r\n                            <InputGroup className=\"mb-3\">\r\n                              <Input type=\"text\"  onChange={this.EmployeeName} placeholder=\"Enter Employee Name\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                              <Input type=\"text\"  onChange={this.Email} placeholder=\"Enter Email\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                              <Input type=\"password\"  onChange={this.Password} placeholder=\"Enter Password\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-4\">\r\n                              <Input type=\"text\"  onChange={this.City} placeholder=\"Enter City\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-4\">\r\n                              <Input type=\"text\"  onChange={this.Department} placeholder=\"Enter Department\" />\r\n                            </InputGroup>\r\n                            <Button  onClick={this.register}  color=\"success\" block>Create Account</Button>\r\n                          </Form>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n        export default Reg;","import React, { Component } from 'react';\r\nimport './App.css';\r\n// import { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\r\n  class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mb-2 pageheading\">\r\n                <div className=\"col-sm-12 btn btn-primary\">\r\n                    Dashboard \r\n             </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';  \r\nimport axios from 'axios';  \r\nimport '../Student/Addstudent.css'  \r\nimport { Container, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';  \r\nclass Addstudent extends React.Component{  \r\nconstructor(props){  \r\nsuper(props)  \r\nthis.state = {  \r\nName:'',  \r\nRollNo:'',  \r\nClass:'',  \r\nAddress:''  \r\n}  \r\n}   \r\nAddstudent=()=>{  \r\n  axios.post('http://localhost:65164/Api/Student/AddotrUpdatestudent/', {Name:this.state.Name,RollNo:this.state.RollNo,  \r\n  Class:this.state.Class, Address:this.state.Address})  \r\n.then(json => {  \r\nif(json.data.Status==='Success'){  \r\n  console.log(json.data.Status);  \r\n  alert(\"Data Save Successfully\");  \r\nthis.props.history.push('/Studentlist')  \r\n}  \r\nelse{  \r\nalert('Data not Saved');  \r\ndebugger;  \r\nthis.props.history.push('/Studentlist')  \r\n}  \r\n})  \r\n}  \r\nhandleChange= (e)=> {  \r\nthis.setState({[e.target.name]:e.target.value});  \r\n}  \r\nrender() {  \r\nreturn (  \r\n   <Container className=\"App\">  \r\n    <h4 className=\"PageHeading\">Enter Student Informations</h4>  \r\n    <Form className=\"form\">  \r\n      <Col>  \r\n        <FormGroup row>  \r\n          <Label for=\"name\" sm={2}>Name</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"Name\" onChange={this.handleChange} value={this.state.Name} placeholder=\"Enter Name\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n        <FormGroup row>  \r\n          <Label for=\"address\" sm={2}>RollNo</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"RollNo\" onChange={this.handleChange} value={this.state.RollNo} placeholder=\"Enter RollNo\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n        <FormGroup row>  \r\n          <Label for=\"Password\" sm={2}>Class</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"Class\" onChange={this.handleChange} value={this.state.Class} placeholder=\"Enter Class\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n        <FormGroup row>  \r\n          <Label for=\"Password\" sm={2}>Address</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"Address\" onChange={this.handleChange} value={this.state.Address} placeholder=\"Enter Address\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n      </Col>  \r\n      <Col>  \r\n        <FormGroup row>  \r\n          <Col sm={5}>  \r\n          </Col>  \r\n          <Col sm={1}>  \r\n          <button type=\"button\" onClick={this.Addstudent} className=\"btn btn-success\">Submit</button>  \r\n          </Col>  \r\n          <Col sm={1}>  \r\n            <Button color=\"danger\">Cancel</Button>{' '}  \r\n          </Col>  \r\n          <Col sm={5}>  \r\n          </Col>  \r\n        </FormGroup>  \r\n      </Col>  \r\n    </Form>  \r\n  </Container>  \r\n);  \r\n}  \r\n}  \r\nexport default Addstudent;","import React, { Component } from 'react';  \r\nimport axios from 'axios';  \r\nimport { Link } from 'react-router-dom';  \r\nclass Table extends Component {  \r\n  // constructor(props) {  \r\n  //   super(props);  \r\n  //   }  \r\n    DeleteStudent= () =>{  \r\n     axios.delete('http://localhost:65164/Api/Student/Deletestudent?id='+this.props.obj.Id)  \r\n    .then(json => {  \r\n    if(json.data.Status==='Delete'){  \r\n    alert('Record deleted successfully!!');  \r\n    }  \r\n    })  \r\n    }  \r\n  render() {  \r\n    return (  \r\n        <tr>  \r\n          <td>  \r\n            {this.props.obj.Name}  \r\n          </td>  \r\n          <td>  \r\n            {this.props.obj.RollNo}  \r\n          </td>  \r\n          <td>  \r\n            {this.props.obj.Class}  \r\n          </td>  \r\n          <td>  \r\n            {this.props.obj.Address}  \r\n          </td>  \r\n          <td>  \r\n          <Link to={\"/edit/\"+this.props.obj.Id} className=\"btn btn-success\">Edit</Link>  \r\n          </td>  \r\n          <td>  \r\n            <button type=\"button\" onClick={this.DeleteStudent} className=\"btn btn-danger\">Delete</button>  \r\n          </td>  \r\n        </tr>  \r\n    );  \r\n  }  \r\n}  \r\nexport default Table;","import React, { Component } from 'react';  \r\nimport axios from 'axios';  \r\nimport Table from './Table';  \r\nexport default class Studentlist extends Component {  \r\n  constructor(props) {  \r\n      super(props);  \r\n      this.state = {business: []};  \r\n    }  \r\n    componentDidMount(){  \r\n      debugger;  \r\n      axios.get('http://localhost:65164/Api/Student/Studentdetails')  \r\n        .then(response => {  \r\n          this.setState({ business: response.data });  \r\n          debugger;  \r\n        })  \r\n        .catch(function (error) {  \r\n          console.log(error);  \r\n        })  \r\n    }  \r\n    tabRow(){  \r\n      return this.state.business.map(function(object, i){  \r\n          return <Table obj={object} key={i} />;  \r\n      });  \r\n    }  \r\n    render() {  \r\n      return (  \r\n        <div>  \r\n          <h4 align=\"center\">Student List</h4>  \r\n          <table className=\"table table-striped\" style={{ marginTop: 10 }}>  \r\n            <thead>  \r\n              <tr>  \r\n                <th>Name</th>  \r\n                <th>RollNo</th>  \r\n                <th>Class</th>  \r\n                <th>Address</th>  \r\n                <th colSpan=\"4\">Action</th>  \r\n              </tr>  \r\n            </thead>  \r\n            <tbody>  \r\n             { this.tabRow() }   \r\n            </tbody>  \r\n          </table>  \r\n        </div>  \r\n      );  \r\n    }  \r\n  }","import React from 'react';   \r\nimport { Container, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';  \r\nimport axios from 'axios'  \r\nimport '../Student/Addstudent.css'  \r\nclass Edit extends React.Component {  \r\n    constructor(props) {  \r\n        super(props)  \r\n    this.onChangeName = this.onChangeName.bind(this);  \r\n    this.onChangeRollNo = this.onChangeRollNo.bind(this);  \r\n    this.onChangeClass = this.onChangeClass.bind(this);  \r\n    this.onChangeAddress = this.onChangeAddress.bind(this);  \r\n    this.onSubmit = this.onSubmit.bind(this);  \r\n         this.state = {  \r\n            Name: '',  \r\n            RollNo: '',  \r\n            Class: '',  \r\n            Address: ''  \r\n        }  \r\n    }  \r\n  componentDidMount() {  \r\n      axios.get('http://localhost:65164/Api/Student/StudentdetailById?id='+this.props.match.params.id)  \r\n          .then(response => {  \r\n              this.setState({   \r\n                Name: response.data.Name,   \r\n                RollNo: response.data.RollNo,  \r\n                Class: response.data.Class,  \r\n                Address: response.data.Address });  \r\n          })  \r\n          .catch(function (error) {  \r\n              console.log(error);  \r\n          })  \r\n    }  \r\n  onChangeName(e) {  \r\n    this.setState({  \r\n        Name: e.target.value  \r\n    });  \r\n  }  \r\n  onChangeRollNo(e) {  \r\n    this.setState({  \r\n        RollNo: e.target.value  \r\n    });    \r\n  }  \r\n  onChangeClass(e) {  \r\n    this.setState({  \r\n        Class: e.target.value  \r\n    });  \r\n}  \r\n    onChangeAddress(e) {  \r\n        this.setState({  \r\n            Address: e.target.value  \r\n        });  \r\n  }  \r\n  onSubmit(e) {  \r\n    debugger;  \r\n    e.preventDefault();  \r\n    const obj = {  \r\n        Id:this.props.match.params.id,  \r\n      Name: this.state.Name,  \r\n      RollNo: this.state.RollNo,  \r\n      Class: this.state.Class,  \r\n      Address: this.state.Address  \r\n    };  \r\n    axios.post('http://localhost:65164/Api/Student/AddotrUpdatestudent/', obj)  \r\n        .then(res => console.log(res.data));  \r\n        debugger;  \r\n        this.props.history.push('/Studentlist')  \r\n  }  \r\n    render() {  \r\n        return (  \r\n            <Container className=\"App\">  \r\n             <h4 className=\"PageHeading\">Update Student Informations</h4>  \r\n                <Form className=\"form\" onSubmit={this.onSubmit}>  \r\n                    <Col>  \r\n                        <FormGroup row>  \r\n                            <Label for=\"name\" sm={2}>Name</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"Name\" value={this.state.Name} onChange={this.onChangeName}  \r\n                                placeholder=\"Enter Name\" />  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                        <FormGroup row>  \r\n                            <Label for=\"Password\" sm={2}>RollNo</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"RollNo\" value={this.state.RollNo} onChange={this.onChangeRollNo} placeholder=\"Enter RollNo\" />  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                         <FormGroup row>  \r\n                            <Label for=\"Password\" sm={2}>Class</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"Class\" value={this.state.Class} onChange={this.onChangeClass} placeholder=\"Enter Class\" />  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                         <FormGroup row>  \r\n                            <Label for=\"Password\" sm={2}>Address</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"Address\"value={this.state.Address} onChange={this.onChangeAddress} placeholder=\"Enter Address\" />  \r\n                            </Col>  \r\n                        </FormGroup>   \r\n                    </Col>  \r\n                    <Col>  \r\n                        <FormGroup row>  \r\n                            <Col sm={5}>  \r\n                            </Col>  \r\n                            <Col sm={1}>  \r\n                          <Button type=\"submit\" color=\"success\">Submit</Button>{' '}  \r\n                            </Col>  \r\n                            <Col sm={1}>  \r\n                                <Button color=\"danger\">Cancel</Button>{' '}  \r\n                            </Col>  \r\n                            <Col sm={5}>  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                    </Col>  \r\n                </Form>  \r\n            </Container>  \r\n        );  \r\n    }  \r\n}  \r\nexport default Edit;","import React from 'react';  \n// import logo from './logo.svg';  \n// import \"../node_modules/jquery/dist/jquery.min.js\";\nimport './App.css';  \nimport Login from './Login';  \nimport Reg from './Reg';  \nimport Dashboard from './Dashboard';  \nimport Addstudent from './Student/Addstudent';  \nimport Studentlist from './Student/Studentlist';  \nimport EditStudent from './Student/Editstudent';  \nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';   \nfunction App() {  \n  return (  \n    <Router>    \n      \n      <div className=\"container\">    \n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"google.com\">Navbar</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" \n  aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">    \n            <ul className=\"navbar-nav\">    \n              <li className=\"nav-item\">    \n                <Link to={'/Login'} className=\"nav-link\">Login</Link>    \n              </li>    \n              <li className=\"nav-item\">    \n                <Link to={'/Signup'} className=\"nav-link\">Sign Up</Link>    \n              </li>  \n              <li className=\"nav-item\">  \n                <Link to={'/Addstudent'} className=\"nav-link\">Addstudent</Link>  \n              </li>  \n              <li className=\"nav-item\">  \n                <Link to={'/Studentlist'} className=\"nav-link\">Student List</Link>  \n              </li>    \n            </ul>    \n          </div>    \n        </nav> <br />    \n        <Switch>    \n          <Route exact path='/Login' component={Login} />    \n          <Route path='/Signup' component={Reg} />    \n        </Switch>    \n        <Switch>  \n        <Route path='/Dashboard' component={Dashboard} />    \n        </Switch>  \n        <Switch>  \n          <Route exact path='/Addstudent' component={Addstudent} />  \n          <Route path='/edit/:id' component={EditStudent} />  \n          <Route path='/Studentlist' component={Studentlist} />  \n        </Switch> \n      </div>    \n    </Router>   \n  );  \n}  \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"../node_modules/jquery/dist/jquery.min.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}