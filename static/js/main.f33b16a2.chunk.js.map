{"version":3,"sources":["logo.svg","components/NavMenu.js","Login.js","Reg.js","Dashboard.js","Student/Addstudent.js","Student/Table.js","Student/Studentlist.js","Student/Editstudent.js","Test.js","actions/myaction.js","App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["module","exports","NavMenu","props","toggle","bind","state","isOpen","this","setState","Navbar","className","light","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","NavItem","NavLink","React","Component","Login","Email","Password","login","event","target","value","fetch","method","headers","body","JSON","stringify","then","Response","json","result","console","log","Status","alert","history","push","Row","Col","md","lg","xl","CardGroup","Card","CardBody","Form","InputGroup","Input","type","onChange","placeholder","Button","color","block","Reg","EmployeeName","City","Department","register","Result","Dashboard","Addstudent","axios","post","Name","RollNo","Class","Address","data","handleChange","e","name","FormGroup","row","Label","for","sm","Table","DeleteStudent","delete","obj","Id","Studentlist","business","get","response","catch","error","map","object","i","key","align","style","marginTop","colSpan","tabRow","Edit","onChangeName","onChangeRollNo","onChangeClass","onChangeAddress","onSubmit","match","params","id","preventDefault","res","connect","myname","dispatch","changeName","a","res2","payload","App","src","logo","alt","exact","path","component","EditStudent","Test","Boolean","window","location","hostname","iState","wish","reducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f33b16a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport default class NavMenu extends React.Component {\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle () {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm border-bottom box-shadow mb-3\" light >\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">React App Demo</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={this.state.isOpen} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                   <NavLink tag={Link} className=\"text-dark\" to=\"/Login\">Login</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                   <NavLink tag={Link} className=\"text-dark\" to=\"/Signup\">Sign Up</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                   <NavLink tag={Link} className=\"text-dark\" to=\"/Addstudent\">Add Student</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                   <NavLink tag={Link} className=\"text-dark\" to=\"/Studentlist\">Student List</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                   <NavLink tag={Link} className=\"text-dark\" to=\"/Test\">Test</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component} from 'react';\r\nimport './App.css';\r\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup,\r\n    //  InputGroupAddon, InputGroupText, \r\n     Row } from 'reactstrap';\r\n\r\nclass Login extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            Email:'',\r\n            Password:''\r\n        }\r\n        this.Password = this.Password.bind(this);\r\n        this.Email = this.Email.bind(this);\r\n        this.login = this.login.bind(this);\r\n    }\r\n    Email(event){\r\n        this.setState({Email: event.target.value })\r\n    }\r\n    Password(event){\r\n        this.setState({Password: event.target.value })\r\n    }\r\n    login(event){\r\n        debugger;\r\n        fetch('http://localhost:65164/Api/login/Login',{\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Email: this.state.Email,\r\n                Password: this.state.Password\r\n            })\r\n        }).then((Response)=> Response.json()).then((result)=>{\r\n            console.log(result);\r\n            if (result.Status === 'Invalid')\r\n                    alert('Invalid User');\r\n                else\r\n                    this.props.history.push(\"/Dashboard\");\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"app flex-row align-items-center\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <CardGroup>\r\n                                <Card className=\"p-2\">\r\n                                    <CardBody>\r\n                                        <Form>\r\n                                            <div className=\"row mb-2 pageheading\">\r\n                                                <div className=\"col-sm-12 btn disable\">Login</div>\r\n                                            </div>\r\n                                            <InputGroup className=\"mb-3\">\r\n                                                <Input type=\"text\" onChange={this.Email} placeholder=\"Enter Email\" />\r\n                                            </InputGroup>\r\n                                            <InputGroup className=\"mb-4\">\r\n                                                <Input type=\"password\" onChange={this.Password} placeholder=\"Enter Password\" />\r\n                                            </InputGroup>\r\n                                            <Button onClick={this.login} color=\"success\" block>Login</Button>\r\n                                        </Form>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </CardGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Login;","import React, {Component} from 'react';\r\nimport { Button, Card, CardBody, Col, Container, Form, Input, InputGroup, Row } from 'reactstrap';\r\n\r\nclass Reg extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            EmployeeName: '',\r\n            City: '',\r\n            Email: '',\r\n            Password: '',\r\n            Department: ''\r\n        }\r\n        this.Email = this.Email.bind(this);\r\n        this.Password = this.Password.bind(this);\r\n        this.EmployeeName = this.EmployeeName.bind(this);\r\n        this.Department = this.Department.bind(this);\r\n        this.City = this.City.bind(this);\r\n        this.register = this.register.bind(this);\r\n    }\r\n\r\n    Email(event) {\r\n    this.setState({ Email: event.target.value })\r\n    }\r\n    Department(event) {\r\n    this.setState({ Department: event.target.value })\r\n    }\r\n    Password(event) {\r\n    this.setState({ Password: event.target.value })\r\n    }\r\n    City(event) {\r\n    this.setState({ City: event.target.value })\r\n    }\r\n    EmployeeName(event) {\r\n    this.setState({ EmployeeName: event.target.value })\r\n    }\r\n    register(event){\r\n        fetch('http://localhost:65164/Api/login/InsertEmployee', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                EmployeeName: this.state.EmployeeName,\r\n                Password: this.state.Password,\r\n                Email: this.state.Email,\r\n                City: this.state.City,\r\n                Department: this.state.Department\r\n            })\r\n        }).then((Response) => Response.json()).then((Result) => {\r\n            if (Result.Status === 'Success')\r\n                this.props.history.push(\"/Dashboard\");\r\n            else\r\n            alert('Sorrrrrry !!!! Un-authenticated User !!!!!')\r\n        })\r\n    }\r\n    render() {\r\n            return (\r\n              <div className=\"app flex-row align-items-center\">\r\n                <Container>\r\n                  <Row className=\"justify-content-center\">\r\n                    <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n                      <Card className=\"mx-4\">\r\n                        <CardBody className=\"p-4\">\r\n                          <Form>\r\n                            <div className=\"row mb-2 pageheading\">\r\n                              <div className=\"col-sm-12 btn btn-primary\">\r\n                                Sign Up\r\n                                </div>\r\n                            </div>\r\n                            <InputGroup className=\"mb-3\">\r\n                              <Input type=\"text\"  onChange={this.EmployeeName} placeholder=\"Enter Employee Name\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                              <Input type=\"text\"  onChange={this.Email} placeholder=\"Enter Email\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-3\">\r\n                              <Input type=\"password\"  onChange={this.Password} placeholder=\"Enter Password\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-4\">\r\n                              <Input type=\"text\"  onChange={this.City} placeholder=\"Enter City\" />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mb-4\">\r\n                              <Input type=\"text\"  onChange={this.Department} placeholder=\"Enter Department\" />\r\n                            </InputGroup>\r\n                            <Button  onClick={this.register}  color=\"success\" block>Create Account</Button>\r\n                          </Form>\r\n                        </CardBody>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n        export default Reg;","import React, { Component } from 'react';\r\nimport './App.css';\r\n// import { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\r\n  class Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mb-2 pageheading\">\r\n                <div className=\"col-sm-12 btn btn-primary\">\r\n                    Dashboard \r\n             </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';  \r\nimport axios from 'axios';  \r\nimport '../Student/Addstudent.css'  \r\nimport { Container, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';  \r\nclass Addstudent extends React.Component{  \r\nconstructor(props){  \r\nsuper(props)  \r\nthis.state = {  \r\nName:'',  \r\nRollNo:'',  \r\nClass:'',  \r\nAddress:''  \r\n}  \r\n}   \r\nAddstudent=()=>{  \r\n  axios.post('http://localhost:65164/Api/Student/AddotrUpdatestudent/', {Name:this.state.Name,RollNo:this.state.RollNo,  \r\n  Class:this.state.Class, Address:this.state.Address})  \r\n.then(json => {  \r\nif(json.data.Status==='Success'){  \r\n  console.log(json.data.Status);  \r\n  alert(\"Data Save Successfully\");  \r\nthis.props.history.push('/Studentlist')  \r\n}  \r\nelse{  \r\nalert('Data not Saved');  \r\ndebugger;  \r\nthis.props.history.push('/Studentlist')  \r\n}  \r\n})  \r\n}  \r\nhandleChange= (e)=> {  \r\nthis.setState({[e.target.name]:e.target.value});  \r\n}  \r\nrender() {  \r\nreturn (  \r\n   <Container className=\"App\">  \r\n    <h4 className=\"PageHeading\">Enter Student Informations</h4>  \r\n    <Form className=\"form\">  \r\n      <Col>  \r\n        <FormGroup row>  \r\n          <Label for=\"name\" sm={2}>Name</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"Name\" onChange={this.handleChange} value={this.state.Name} placeholder=\"Enter Name\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n        <FormGroup row>  \r\n          <Label for=\"address\" sm={2}>RollNo</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"RollNo\" onChange={this.handleChange} value={this.state.RollNo} placeholder=\"Enter RollNo\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n        <FormGroup row>  \r\n          <Label for=\"Password\" sm={2}>Class</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"Class\" onChange={this.handleChange} value={this.state.Class} placeholder=\"Enter Class\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n        <FormGroup row>  \r\n          <Label for=\"Password\" sm={2}>Address</Label>  \r\n          <Col sm={10}>  \r\n            <Input type=\"text\" name=\"Address\" onChange={this.handleChange} value={this.state.Address} placeholder=\"Enter Address\" />  \r\n          </Col>  \r\n        </FormGroup>  \r\n      </Col>  \r\n      <Col>  \r\n        <FormGroup row>  \r\n          <Col sm={5}>  \r\n          </Col>  \r\n          <Col sm={1}>  \r\n          <button type=\"button\" onClick={this.Addstudent} className=\"btn btn-success\">Submit</button>  \r\n          </Col>  \r\n          <Col sm={1}>  \r\n            <Button color=\"danger\">Cancel</Button>{' '}  \r\n          </Col>  \r\n          <Col sm={5}>  \r\n          </Col>  \r\n        </FormGroup>  \r\n      </Col>  \r\n    </Form>  \r\n  </Container>  \r\n);  \r\n}  \r\n}  \r\nexport default Addstudent;","import React, { Component } from 'react';  \r\nimport axios from 'axios';  \r\nimport { Link } from 'react-router-dom';  \r\nclass Table extends Component {  \r\n  // constructor(props) {  \r\n  //   super(props);  \r\n  //   }  \r\n    DeleteStudent= () =>{  \r\n     axios.delete('http://localhost:65164/Api/Student/Deletestudent?id='+this.props.obj.Id)  \r\n    .then(json => {  \r\n    if(json.data.Status==='Delete'){  \r\n    alert('Record deleted successfully!!');  \r\n    }  \r\n    })  \r\n    }  \r\n  render() {  \r\n    return (  \r\n        <tr>  \r\n          <td>  \r\n            {this.props.obj.Name}  \r\n          </td>  \r\n          <td>  \r\n            {this.props.obj.RollNo}  \r\n          </td>  \r\n          <td>  \r\n            {this.props.obj.Class}  \r\n          </td>  \r\n          <td>  \r\n            {this.props.obj.Address}  \r\n          </td>  \r\n          <td>  \r\n          <Link to={\"/edit/\"+this.props.obj.Id} className=\"btn btn-success\">Edit</Link>  \r\n          </td>  \r\n          <td>  \r\n            <button type=\"button\" onClick={this.DeleteStudent} className=\"btn btn-danger\">Delete</button>  \r\n          </td>  \r\n        </tr>  \r\n    );  \r\n  }  \r\n}  \r\nexport default Table;","import React, { Component } from 'react';  \r\nimport axios from 'axios';  \r\nimport Table from './Table';  \r\nexport default class Studentlist extends Component {  \r\n  constructor(props) {  \r\n      super(props);  \r\n      this.state = {business: []};  \r\n    }  \r\n    componentDidMount(){  \r\n      debugger;  \r\n      axios.get('http://localhost:65164/Api/Student/Studentdetails')  \r\n        .then(response => {  \r\n          this.setState({ business: response.data });  \r\n          debugger;  \r\n        })  \r\n        .catch(function (error) {  \r\n          console.log(error);  \r\n        })  \r\n    }  \r\n    tabRow(){  \r\n      return this.state.business.map(function(object, i){  \r\n          return <Table obj={object} key={i} />;  \r\n      });  \r\n    }  \r\n    render() {  \r\n      return (  \r\n        <div>  \r\n          <h4 align=\"center\">Student List</h4>  \r\n          <table className=\"table table-striped\" style={{ marginTop: 10 }}>  \r\n            <thead>  \r\n              <tr>  \r\n                <th>Name</th>  \r\n                <th>RollNo</th>  \r\n                <th>Class</th>  \r\n                <th>Address</th>  \r\n                <th colSpan=\"4\">Action</th>  \r\n              </tr>  \r\n            </thead>  \r\n            <tbody>  \r\n             { this.tabRow() }   \r\n            </tbody>  \r\n          </table>  \r\n        </div>  \r\n      );  \r\n    }  \r\n  }","import React from 'react';   \r\nimport { Container, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';  \r\nimport axios from 'axios'  \r\nimport '../Student/Addstudent.css'  \r\nclass Edit extends React.Component {  \r\n    constructor(props) {  \r\n        super(props)  \r\n    this.onChangeName = this.onChangeName.bind(this);  \r\n    this.onChangeRollNo = this.onChangeRollNo.bind(this);  \r\n    this.onChangeClass = this.onChangeClass.bind(this);  \r\n    this.onChangeAddress = this.onChangeAddress.bind(this);  \r\n    this.onSubmit = this.onSubmit.bind(this);  \r\n         this.state = {  \r\n            Name: '',  \r\n            RollNo: '',  \r\n            Class: '',  \r\n            Address: ''  \r\n        }  \r\n    }  \r\n  componentDidMount() {  \r\n      axios.get('http://localhost:65164/Api/Student/StudentdetailById?id='+this.props.match.params.id)  \r\n          .then(response => {  \r\n              this.setState({   \r\n                Name: response.data.Name,   \r\n                RollNo: response.data.RollNo,  \r\n                Class: response.data.Class,  \r\n                Address: response.data.Address });  \r\n          })  \r\n          .catch(function (error) {  \r\n              console.log(error);  \r\n          })  \r\n    }  \r\n  onChangeName(e) {  \r\n    this.setState({  \r\n        Name: e.target.value  \r\n    });  \r\n  }  \r\n  onChangeRollNo(e) {  \r\n    this.setState({  \r\n        RollNo: e.target.value  \r\n    });    \r\n  }  \r\n  onChangeClass(e) {  \r\n    this.setState({  \r\n        Class: e.target.value  \r\n    });  \r\n}  \r\n    onChangeAddress(e) {  \r\n        this.setState({  \r\n            Address: e.target.value  \r\n        });  \r\n  }  \r\n  onSubmit(e) {  \r\n    debugger;  \r\n    e.preventDefault();  \r\n    const obj = {  \r\n        Id:this.props.match.params.id,  \r\n      Name: this.state.Name,  \r\n      RollNo: this.state.RollNo,  \r\n      Class: this.state.Class,  \r\n      Address: this.state.Address  \r\n    };  \r\n    axios.post('http://localhost:65164/Api/Student/AddotrUpdatestudent/', obj)  \r\n        .then(res => console.log(res.data));  \r\n        debugger;  \r\n        this.props.history.push('/Studentlist')  \r\n  }  \r\n    render() {  \r\n        return (  \r\n            <Container className=\"App\">  \r\n             <h4 className=\"PageHeading\">Update Student Informations</h4>  \r\n                <Form className=\"form\" onSubmit={this.onSubmit}>  \r\n                    <Col>  \r\n                        <FormGroup row>  \r\n                            <Label for=\"name\" sm={2}>Name</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"Name\" value={this.state.Name} onChange={this.onChangeName}  \r\n                                placeholder=\"Enter Name\" />  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                        <FormGroup row>  \r\n                            <Label for=\"Password\" sm={2}>RollNo</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"RollNo\" value={this.state.RollNo} onChange={this.onChangeRollNo} placeholder=\"Enter RollNo\" />  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                         <FormGroup row>  \r\n                            <Label for=\"Password\" sm={2}>Class</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"Class\" value={this.state.Class} onChange={this.onChangeClass} placeholder=\"Enter Class\" />  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                         <FormGroup row>  \r\n                            <Label for=\"Password\" sm={2}>Address</Label>  \r\n                            <Col sm={10}>  \r\n                                <Input type=\"text\" name=\"Address\"value={this.state.Address} onChange={this.onChangeAddress} placeholder=\"Enter Address\" />  \r\n                            </Col>  \r\n                        </FormGroup>   \r\n                    </Col>  \r\n                    <Col>  \r\n                        <FormGroup row>  \r\n                            <Col sm={5}>  \r\n                            </Col>  \r\n                            <Col sm={1}>  \r\n                          <Button type=\"submit\" color=\"success\">Submit</Button>{' '}  \r\n                            </Col>  \r\n                            <Col sm={1}>  \r\n                                <Button color=\"danger\">Cancel</Button>{' '}  \r\n                            </Col>  \r\n                            <Col sm={5}>  \r\n                            </Col>  \r\n                        </FormGroup>  \r\n                    </Col>  \r\n                </Form>  \r\n            </Container>  \r\n        );  \r\n    }  \r\n}  \r\nexport default Edit;","import React from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport {anothername} from './actions/myaction'\r\n\r\n\r\nfunction Test(props){  \r\n\r\n    \r\n        console.log(props);\r\n  return (  \r\n    <div>\r\n        <h1>TESTING OF Async using JSON PLACEHOLDER {props.myname}</h1>\r\n    \r\n    <button onClick={()=>{props.changeName()}}>Change</button>\r\n    </div>   \r\n  );  \r\n}  \r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        myname: state.name\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        //changeName:(name)=>{dispatch({type:'CHANGE_NAME',payload:name})}\r\n       // changeName:(name)=>{dispatch(anothername(name))}\r\n        changeName:()=>{dispatch(anothername())}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Test);","// export const anothername = (name) =>{\r\n//     return{\r\n//         type:'CHANGE_NAME',\r\n//         payload:name\r\n//     }\r\n// }\r\n\r\n\r\nexport const anothername = () =>{\r\n    return async (dispatch) =>{\r\n        const data = await fetch('https://jsonplaceholder.typicode.com/users')\r\n        const res2 = await data.json()\r\n        //.then(res=>res.json())\r\n        // .then(res2=>{\r\n        //     dispatch({type:'CHANGE_NAME',payload:res2[0].name})\r\n        dispatch({type:'CHANGE_NAME',payload:res2[0].name})\r\n    }\r\n}","import React from 'react';  \n// import logo from './logo.svg';  \n// import \"../node_modules/jquery/dist/jquery.min.js\";\nimport './App.css';  \nimport NavMenu from './components/NavMenu';\nimport Login from './Login';  \nimport Reg from './Reg';  \nimport Dashboard from './Dashboard';  \nimport Addstudent from './Student/Addstudent';  \nimport Studentlist from './Student/Studentlist';  \nimport EditStudent from './Student/Editstudent';  \nimport Test from './Test';  \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';   \nimport logo from './logo.svg';\n\nfunction App() {  \n  return (  \n\n    <Router>    \n      \n      <div className=\"container\">  \n\n      <NavMenu />\n      <img src={logo} alt=\"Get Started\"/>\n\n\n     \n        <br />\n        <Switch>    \n          <Route exact path='/Login' component={Login} />    \n          <Route path='/Signup' component={Reg} />    \n        </Switch>    \n        <Switch>  \n        <Route path='/Dashboard' component={Dashboard} />    \n        </Switch>  \n        <Switch>  \n          <Route exact path='/Addstudent' component={Addstudent} />  \n          <Route path='/edit/:id' component={EditStudent} />  \n          <Route path='/Studentlist' component={Studentlist} />  \n        </Switch> \n        <Switch>  \n        <Route path='/Test' component={Test} />    \n        </Switch>\n        \n      </div>    \n    </Router>   \n  );  \n}  \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const iState = {\r\n    name:\"My Initial data click below to change from API\",\r\n    wish:['eat','code']\r\n}\r\n\r\nconst reducer = (state=iState,action) =>{\r\n    if(action.type ==='CHANGE_NAME'){\r\n        return{\r\n            ...state,\r\n            name: action.payload\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\n\r\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk'\nimport { Provider} from 'react-redux';\nimport reducer from './reducers/reducer';\n\n\nconst store = createStore(reducer,applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}><App /></Provider>\n    \n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}